spring.application.name=demo
server.port=8080

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#db연결정보
spring.datasource.driver-class-name=ENC(FqmbbYNR1aomoaWZffcpEAQrUGBgLKDe92S9+ol0Nkj+UNaysDnF9g==)
spring.datasource.url=ENC(2oLm+I2F0Ln07Phtxgs43xBVjgK1yWbC/lLdjsBhbA+s9a8ndzjJQ0v4EyknOgM6)
spring.datasource.username=ENC(nZ9WjYcw76FaW6KeCA4GuQG6p+Wblz4G)
spring.datasource.password=ENC(6HpuqwUU1WTtfa/YdbWccM6seGPrIlhK)

jasypt.encryptor.bean=jasyptEncryptor

#config파일위치
mybatis.config-location=classpath:mybatis/mybatis-config.xml

#mapper파일위치
mybatis.mapper-locations=classpath:mybatis/mapper/*-mapping.xml


#logging.level.root=DEBUG

#한글인코딩
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


#spring.thymeleaf.prefix:classpath:/templates/
#spring.thymeleaf.suffix:.html
#spring.thymeleaf.view-names:th/*
# src/main/respources/templates/th/타임리프html파일들위치

######참고####################
#라이브러리 추가 필요(pom.xml)
#<dependency>
#    <groupId>org.springframework.boot</groupId>
#    <artifactId>spring-boot-starter-thymeleaf</artifactId>
#</dependency>

#추가시 아래 자동 생성(application.properties)
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#<html xmlns:th="http://www.thymeleaf.org"> 선언필요

#타임리프는 주로 HTML 태그에 th:* 속성을 지정하는 방식으로 동작합니다.
#th:* 로 속성을 적용하면 기존 HTML 속성을 대체하고, 기존 속성이 없으면 새로 만듭니다.

#input 태그는 th:value를 통해 item이라는 변수에 값이 존재하면 해당 값을 세팅해준다.
#만약 item이 존재하지 않으면 value="test"를 통해 "test"라는 문자열을 세팅해준다.
#==> th:xxx가 붙은 부분은 서버 사이드에서 렌더링 되어 기존 것을 대체하고, th:xxx이 없으면 xxx 속성이 그대로 사용)



